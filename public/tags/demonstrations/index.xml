<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>demonstrations on humus.rocks - soil is life on the rocks</title>
    <link>/tags/demonstrations/</link>
    <description>Recent content in demonstrations on humus.rocks - soil is life on the rocks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/demonstrations/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Soil Taxonomy Graph Database with Neo4j and Cypher</title>
      <link>/post/2020/08/22/soil-taxonomy-graph-database/</link>
      <pubDate>Sat, 22 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/08/22/soil-taxonomy-graph-database/</guid>
      <description>For several years I have dreamt of ontologies and directed graph structures for representation of the logic in Soil Taxonomy. The express purpose of such work is that computer-aided taxonomy is “easier,” less prone to error, and enables more powerful reasoning about inherently abstract – but reasonably well-defined – concepts.
As an undergraduate in Dr. Schulthess’ soils classes at UCONN – the “graphy-ness” of Soil Taxonomy became apparent to me.</description>
    </item>
    
    <item>
      <title>Exploring the tidyverse, lakes, synthetic data, and tibble-SoilProfileCollections</title>
      <link>/post/2020/08/16/exploring-tibble-lakes-aqp-tidyverse/</link>
      <pubDate>Sun, 16 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/08/16/exploring-tibble-lakes-aqp-tidyverse/</guid>
      <description>In this brief tutorial, we will be using the aqp and tidyverse R packages for wrangling stratified environmental data from lake cores.
The sample lake core data from Dewey Dunnington’s tidyverse core-data-wrangling tutorial are pretty “typical” of raw, stratified environmental data that you might have kicking around on your hard drive. It also has a lot of information content despite very small (subset) size – which you will see in his tutorial and in what follows.</description>
    </item>
    
    <item>
      <title>Shiny Pedon Summary: Loafercreek &amp; Gopheridge demo</title>
      <link>/post/2020/08/03/shiny-pedon-summary-now-on-shinyapps-io-w-loafercreek-gopheridge-demo-data/</link>
      <pubDate>Mon, 03 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/08/03/shiny-pedon-summary-now-on-shinyapps-io-w-loafercreek-gopheridge-demo-data/</guid>
      <description>This is the Shiny &amp;ldquo;flexdashboard&amp;rdquo; version of the &amp;ldquo;pedon summary report&amp;rdquo; originally developed by Dylan Beaudette. I have developed and refined this dashboard periodically over several years. I developed it initially as a very simple interface to semi-automate viewing profile sketches and report generation based on mapunit, series name and taxon kind.
https://brownag.shinyapps.io/ShinyPedonSummary/
This tool has been part of the ncss-tech soilReports package for a while now, but recent revisions improve efficiency and produce static output matching the original report Dylan developed.</description>
    </item>
    
    <item>
      <title>Transitioning to hugo &#43; R blogdown-driven blog</title>
      <link>/post/2020/08/01/transitioning-to-hugo-r-blogdown-driven-blog/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/08/01/transitioning-to-hugo-r-blogdown-driven-blog/</guid>
      <description>The humus.rocks website has used Drupal 7 for the last 2.5 years. I have only tapped a fraction of the resources that are available to me in the Drupal platform &amp;ndash; using it essentially as a glorified RSS feed aggregator and &amp;ldquo;blog&amp;rdquo;.
I would much rather write my blogs in markdown &amp;ndash; and then I can extend that to Rmarkdown for my more code-oriented topics or any case where I need to generate some content in a programmatic way.</description>
    </item>
    
    <item>
      <title>First post using Hugo &#43; blogdown</title>
      <link>/post/2020/07/05/first-post-using-hugo-blogdown/</link>
      <pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/07/05/first-post-using-hugo-blogdown/</guid>
      <description>  This is a header This is some regular text.
# this is some R code (with syntax highlighting) for (i in 1:10) { if (i %% 2 == 0) { print(sprintf(&amp;quot;this is a string %s&amp;quot;, i)) } } ## [1] &amp;quot;this is a string 2&amp;quot; ## [1] &amp;quot;this is a string 4&amp;quot; ## [1] &amp;quot;this is a string 6&amp;quot; ## [1] &amp;quot;this is a string 8&amp;quot; ## [1] &amp;quot;this is a string 10&amp;quot;  </description>
    </item>
    
    <item>
      <title>Plot Water Level &amp; NOAA Weather Data</title>
      <link>/post/2020/06/05/plot-henry-waterlevel-nearby-noaa-precip/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/06/05/plot-henry-waterlevel-nearby-noaa-precip/</guid>
      <description>This is a demonstration of how to plot water level data from the Henry Mount Soil Climate database with precipitation data from a nearby NOAA weather station.
The demo uses two functions I recently added to the soilDB package (available on GitHub)
 get_NOAA_stations_nearXY- find all stations near a specified latitude/longitude and bounding box (limit 1000)
 get_NOAA_GHCND - get GHCND data (daily summaries) by station IDs, datatypes and years</description>
    </item>
    
    <item>
      <title>aqp 1.19 release and demos</title>
      <link>/post/2020/01/27/aqp-1-19-release-and-demos/</link>
      <pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/01/27/aqp-1-19-release-and-demos/</guid>
      <description>CRAN release: aqp (Algorithms for Quantitative Pedology) 1.19  Recent Changes CRAN release aqp 1.19 (2020-01-22)  new functions: hzDesgn(), get horizon designations from a SPC new functions: hzdesgnname()/hzdesgnname()&amp;lt;- and hztexclname()/hztexclname()&amp;lt;- get/set column containing horizon designations and texture classes better error/logic handling for glom()    Demonstrations aqp::glom() demo Here is a demonstration of checking cambic horizon texture criteria with glom() in SSURGO components from Yosemite National Park: - http://ncss-tech.</description>
    </item>
    
  </channel>
</rss>